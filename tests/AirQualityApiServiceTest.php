<?php

namespace Test;

use App\AirQualityApiDataParser;
use App\AirQualityApiService;
use App\ApiClient;
use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

class AirQualityApiServiceTest extends TestCase
{
    /**
     * @var AirQualityApiDataParser|MockObject
     */
    private $parser;
    /**
     * @var ApiClient|MockObject
     */
    private $client;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->parser = $this->createMock(AirQualityApiDataParser::class);
        $this->client = $this->createMock(ApiClient::class);
    }

    public function testGetDataSuccessfully()
    {
        $apiData = json_decode(file_get_contents(__DIR__."/sensor-data-9202.json"));
        $this->client
            ->expects($this->once())
            ->method('call')
            ->with('https://data.sensor.community/airrohr/v1/sensor/9202/')
            ->willReturn($apiData);

        $this->parser
            ->expects($this->once())
            ->method('parseRequestedFields')
            ->with($apiData, ['timestamp', 'sensordatavalues'])
            ->willReturn(
                [
                    'timestamp' => '2020-01-20 00:11:09',
                    'sensordatavalues' => [
                        'P1' => '21.08',
                        'P2' => '13.57'
                    ]
                ]
            );

        $service = new AirQualityApiService($this->parser, $this->client);
        $this->assertEquals("timestamp: 2020-01-20 00:11:09 P1: 21.08 P2: 13.57 ", $service->getSensorData([]));
    }
}
